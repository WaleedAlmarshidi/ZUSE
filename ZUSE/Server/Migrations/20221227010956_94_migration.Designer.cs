// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZUSE.Server.Data;

#nullable disable

namespace ZUSE.Server.Migrations
{
    [DbContext(typeof(ZUSE_dbContext))]
    [Migration("20221227010956_94_migration")]
    partial class _94migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ZUSE.Shared.Models.Session", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("business_reference")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("branch_reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("browser_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("closed_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("combos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("DateTime");

                    b.Property<string>("customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("customer_satisfaction")
                        .HasColumnType("float");

                    b.Property<int>("delivery_status")
                        .HasColumnType("int");

                    b.Property<int?>("event_type")
                        .HasColumnType("int");

                    b.Property<string>("kitchen_notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("order_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("order_reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("products")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("products_kitchen_notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("source")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("table_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.HasKey("id", "business_reference");

                    b.HasIndex("id", "business_reference");

                    b.ToTable("sessions");
                });

            modelBuilder.Entity("ZUSE.Shared.Models.ZUSEClient", b =>
                {
                    b.Property<string>("reference")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("branch_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("access_token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("base_pos_provider_api_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("business_type")
                        .HasColumnType("int");

                    b.Property<int?>("external_notification_count")
                        .HasColumnType("int");

                    b.Property<int?>("external_notification_limit")
                        .HasColumnType("int");

                    b.Property<string>("external_notification_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("external_notification_special_msg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("integrated_pos")
                        .HasColumnType("int");

                    b.Property<bool>("is_external_notification_user")
                        .HasColumnType("bit");

                    b.Property<bool>("is_kds_order_completion_approval_needed")
                        .HasColumnType("bit");

                    b.Property<bool>("is_kds_provider")
                        .HasColumnType("bit");

                    b.Property<bool>("is_loyalty_enabled")
                        .HasColumnType("bit");

                    b.Property<bool>("is_mobile_notifier_provider")
                        .HasColumnType("bit");

                    b.Property<bool>("is_pos_integrated")
                        .HasColumnType("bit");

                    b.Property<bool>("is_tv_provider")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pos_categories_fetch_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rewards_greeting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rewards_plan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("rewards_points_threshold")
                        .HasColumnType("float");

                    b.Property<string>("sections_fetch_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tables_fetch_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("topic_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tv_text_to_speach")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("reference", "branch_id");

                    b.ToTable("ZUSEClients");
                });
#pragma warning restore 612, 618
        }
    }
}
